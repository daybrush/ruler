{"version":3,"file":"ruler.cjs.js","sources":["../src/consts.ts","../src/InnerRuler.tsx","../src/Ruler.tsx","../src/index.umd.ts"],"sourcesContent":["import { RulerProps, RulerInterface } from \"@scena/react-ruler/declaration/types\";\nimport {\n    PROPERTIES as RULER_PROPERTIES,\n    METHODS as RULER_METHODS,\n} from \"@scena/react-ruler\";\n\nexport const PROPERTIES: Array<keyof RulerProps> = RULER_PROPERTIES;\nexport const METHODS: Array<keyof RulerInterface> = RULER_METHODS;\n","import * as React from \"react\";\nimport { createPortal } from \"react-dom\";\nimport { ref } from \"framework-utils\";\nimport ReactRuler from \"@scena/react-ruler\";\nimport { InnerRulerProps } from \"./types\";\n\nexport default class InnerRuler extends React.Component<InnerRulerProps, InnerRulerProps> {\n    public state: InnerRulerProps = {};\n    public ruler: ReactRuler;\n    constructor(props: InnerRulerProps) {\n        super(props);\n        this.state = this.props;\n    }\n    public render() {\n        const { parentElement, ...state } = this.state;\n\n        return createPortal(<ReactRuler ref={ref(this, \"ruler\")} {...state} />, parentElement);\n    }\n}\n","import { ref, Properties } from \"framework-utils\";\nimport * as React from \"react\";\nimport { render } from \"react-dom\";\nimport { PROPERTIES } from \"./consts\";\nimport { RulerInterface, RulerProps } from \"@scena/react-ruler/declaration/types\";\nimport InnerRuler from \"./InnerRuler\";\n\n\n/**\n * A Ruler component that can draw grids and scroll infinitely.\n * @sort 1\n * @implements Ruler.RulerInterface\n */\n@Properties(PROPERTIES, (prototype, property) => {\n    Object.defineProperty(prototype, property, {\n        get() {\n            return this.getRuler().props[property];\n        },\n        set(value) {\n            this.innerRuler.setState({\n                [property]: value,\n            });\n        },\n        enumerable: true,\n        configurable: true,\n    });\n})\nclass Ruler implements RulerInterface {\n    private tempElement = document.createElement(\"div\");\n    private innerRuler!: InnerRuler;\n    /**\n     * @param - container\n     * @param {$ts:Partial<Ruler.RulerProps>} options - options\n     */\n    constructor(parentElement: HTMLElement, options: Partial<RulerProps> = {}) {\n        render(\n            <InnerRuler ref={ref(this, \"innerRuler\")}\n                {...options} parentElement={parentElement} />,\n            this.tempElement,\n        );\n    }\n    public scroll(scrollPos: number) {\n        this.getRuler().scroll(scrollPos);\n    }\n    public resize() {\n        this.getRuler().resize();\n    }\n    public getScrollPos() {\n        return this.getRuler().getScrollPos();\n    }\n    /**\n     * Remove Ruler\n     */\n    public destroy() {\n        render(null, this.tempElement);\n        this.tempElement = null;\n        this.innerRuler = null;\n    }\n    private getRuler() {\n        return this.innerRuler.ruler;\n    }\n}\n\nexport default Ruler;\n","import Ruler, * as others from \"./index.esm\";\n\nfor (const name in others) {\n    (Ruler as any)[name] = others[name];\n}\n\nexport default Ruler;\n"],"names":["PROPERTIES","RULER_PROPERTIES","METHODS","RULER_METHODS","__extends","props","_super","_this","state","_a","parentElement","createPortal","React","ReactRuler","ref","options","document","createElement","render","InnerRuler","tempElement","scrollPos","getRuler","scroll","resize","getScrollPos","innerRuler","ruler","Ruler","Properties","prototype","property","Object","defineProperty","get","set","value","setState","enumerable","configurable","name","others"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAMO,IAAMA,UAAU,GAA4BC,qBAA5C;AACP,AAAO,IAAMC,OAAO,GAAgCC,kBAA7C;;ACDP;;;EAAwCC,6BAAA;;EAGpC,mBAAA,CAAYC,KAAZ;IAAA,YACIC,WAAA,KAAA,EAAMD,KAAN,SADJ;;IAFOE,WAAA,GAAyB,EAAzB;IAIHA,KAAI,CAACC,KAAL,GAAaD,KAAI,CAACF,KAAlB;;;;;;EAEG,cAAA,GAAP;IACI,IAAMI,KAA8B,KAAKD,KAAzC;QAAQE,aAAa,mBAArB;QAA0BF,KAAK,cAAzB,gBAAA,EAAN;;IAEA,OAAOG,kBAAY,CAACC,mBAAA,CAACC,UAAD;MAAYC,GAAG,EAAEA,kBAAG,CAAC,IAAD,EAAO,OAAP;OAAqBN,MAAzC,CAAD,EAAqDE,aAArD,CAAnB;GAHG;;EAKX,iBAAA;AAAC,EAZuCE,gBAAxC;;ACEA;;;;;;AAmBA;;;;;;;EAOI,cAAA,CAAYF,aAAZ,EAAwCK,OAAxC;IAAwC,sBAAA,EAAA;MAAAA,YAAA;;;IANhC,gBAAA,GAAcC,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAd;IAOJC,YAAM,CACFN,mBAAA,CAACO,UAAD;MAAYL,GAAG,EAAEA,kBAAG,CAAC,IAAD,EAAO,YAAP;OACZC;MAASL,aAAa,EAAEA;MADhC,CADE,EAGF,KAAKU,WAHH,CAAN;;;;;EAMG,cAAA,GAAP,UAAcC,SAAd;IACI,KAAKC,QAAL,GAAgBC,MAAhB,CAAuBF,SAAvB;GADG;;EAGA,cAAA,GAAP;IACI,KAAKC,QAAL,GAAgBE,MAAhB;GADG;;EAGA,oBAAA,GAAP;IACI,OAAO,KAAKF,QAAL,GAAgBG,YAAhB,EAAP;GADG;;;;;;EAMA,eAAA,GAAP;IACIP,YAAM,CAAC,IAAD,EAAO,KAAKE,WAAZ,CAAN;IACA,KAAKA,WAAL,GAAmB,IAAnB;IACA,KAAKM,UAAL,GAAkB,IAAlB;GAHG;;EAKC,gBAAA,GAAR;IACI,OAAO,KAAKA,UAAL,CAAgBC,KAAvB;GADI;;EA/BNC,KAAK,eAdVC,yBAAU,CAAC7B,UAAD,EAAa,UAAC8B,SAAD,EAAYC,QAAZ;IACpBC,MAAM,CAACC,cAAP,CAAsBH,SAAtB,EAAiCC,QAAjC,EAA2C;MACvCG,GAAG;QACC,OAAO,KAAKZ,QAAL,GAAgBjB,KAAhB,CAAsB0B,QAAtB,CAAP;OAFmC;MAIvCI,GAAG,YAACC;;;QACA,KAAKV,UAAL,CAAgBW,QAAhB,WACI5B,GAACsB,SAAD,GAAYK,SADhB;OALmC;MASvCE,UAAU,EAAE,IAT2B;MAUvCC,YAAY,EAAE;KAVlB;GADO,IAcLX,MAAA;EAkCN,YAAA;AAlCA,GAAA;;;;;;;;;;;ACzBA,KAAK,IAAMY,IAAX,IAAmBC,MAAnB,EAA2B;EACtBb,KAAa,CAACY,IAAD,CAAb,GAAsBC,MAAM,CAACD,IAAD,CAA5B;AACJ;;;;"}
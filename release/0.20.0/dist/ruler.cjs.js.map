{"version":3,"file":"ruler.cjs.js","sources":["../src/consts.ts","../src/InnerRuler.tsx","../src/Ruler.tsx","../src/index.umd.ts"],"sourcesContent":["import { RulerProps, RulerInterface } from \"@scena/react-ruler/declaration/types\";\nimport {\n    PROPERTIES as RULER_PROPERTIES,\n    METHODS as RULER_METHODS,\n} from \"@scena/react-ruler\";\n\nexport const PROPERTIES: Array<keyof RulerProps> = RULER_PROPERTIES;\nexport const METHODS: Array<keyof RulerInterface> = RULER_METHODS;\n","import * as React from \"react\";\nimport { createPortal } from \"react-dom\";\nimport { ref } from \"framework-utils\";\nimport ReactRuler from \"@scena/react-ruler\";\nimport { InnerRulerProps } from \"./types\";\n\nexport default class InnerRuler extends React.Component<InnerRulerProps, InnerRulerProps> {\n    public state: InnerRulerProps = {};\n    public ruler: ReactRuler;\n    constructor(props: InnerRulerProps) {\n        super(props);\n        this.state = this.props;\n    }\n    public render() {\n        return <ReactRuler ref={ref(this, \"ruler\")} {...this.state} />;\n    }\n}\n","import { ref, Properties } from \"framework-utils\";\nimport * as React from \"react\";\nimport { PROPERTIES } from \"./consts\";\nimport { DrawRulerOptions, RulerInterface, RulerProps } from \"@scena/react-ruler/declaration/types\";\nimport InnerRuler from \"./InnerRuler\";\nimport { ContainerProvider, renderSelf } from \"croact\";\n\n\n/**\n * A Ruler component that can draw grids and scroll infinitely.\n * @sort 1\n * @implements Ruler.RulerInterface\n */\n@Properties(PROPERTIES, (prototype, property) => {\n    Object.defineProperty(prototype, property, {\n        get() {\n            return this.getRuler().props[property];\n        },\n        set(value) {\n            this.innerRuler.setState({\n                [property]: value,\n            });\n        },\n        enumerable: true,\n        configurable: true,\n    });\n})\nclass Ruler implements RulerInterface {\n    private containerProvider: ContainerProvider | null = null;\n    private selfElement: HTMLElement | null = null;\n    private _warp = false;\n    private innerRuler!: InnerRuler;\n    /**\n     * @param - container\n     * @param {$ts:Partial<Ruler.RulerProps>} options - options\n     */\n    constructor(parentElement: HTMLElement, options: Partial<RulerProps> = {}) {\n        let selfElement!: HTMLElement;\n\n        if (options.warpSelf) {\n            delete options.warpSelf;\n            this._warp = true;\n            selfElement = parentElement;\n        } else {\n            selfElement = document.createElement(\"canvas\");\n            parentElement.appendChild(selfElement);\n        }\n        renderSelf(\n            <InnerRuler ref={ref(this, \"innerRuler\")}\n                {...options} />,\n            selfElement,\n        );\n    }\n    public scroll(scrollPos: number) {\n        this.getRuler().scroll(scrollPos);\n    }\n    public resize() {\n        this.getRuler().resize();\n    }\n    public getScrollPos() {\n        return this.getRuler().getScrollPos();\n    }\n    public draw(options: DrawRulerOptions) {\n        this.getRuler().draw(options);\n    }\n    /**\n     * Remove Ruler\n     */\n    public destroy() {\n        const selfElement = this.selfElement!;\n\n        renderSelf(\n            null,\n            selfElement!,\n            this.containerProvider,\n        );\n        if (!this._warp) {\n            selfElement?.parentElement?.removeChild(selfElement);\n        }\n        this.selfElement = null;\n        this.innerRuler = null;\n    }\n    private getRuler() {\n        return this.innerRuler.ruler;\n    }\n}\n\nexport default Ruler;\n","import Ruler, * as others from \"./index.esm\";\n\nfor (const name in others) {\n    (Ruler as any)[name] = others[name];\n}\n\nexport default Ruler;\n"],"names":["PROPERTIES","RULER_PROPERTIES","METHODS","RULER_METHODS","__extends","props","_super","_this","state","React","ReactRuler","ref","parentElement","options","selfElement","warpSelf","_warp","document","createElement","appendChild","renderSelf","InnerRuler","scrollPos","getRuler","scroll","resize","getScrollPos","draw","containerProvider","removeChild","innerRuler","ruler","Ruler","Properties","prototype","property","Object","defineProperty","get","set","value","setState","_a","enumerable","configurable","name","others"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAMO,IAAMA,UAAU,GAA4BC,qBAA5C;AACP,AAAO,IAAMC,OAAO,GAAgCC,kBAA7C;;ACDP;;;EAAwCC,6BAAA;;EAGpC,mBAAA,CAAYC,KAAZ;IAAA,YACIC,WAAA,KAAA,EAAMD,KAAN,SADJ;;IAFOE,WAAA,GAAyB,EAAzB;IAIHA,KAAI,CAACC,KAAL,GAAaD,KAAI,CAACF,KAAlB;;;;;;EAEG,cAAA,GAAP;IACI,OAAOI,mBAAA,CAACC,UAAD;MAAYC,GAAG,EAAEA,kBAAG,CAAC,IAAD,EAAO,OAAP;OAAqB,KAAKH,MAA9C,CAAP;GADG;;EAGX,iBAAA;AAAC,EAVuCC,gBAAxC;;ACEA;;;;;;AAmBA;;;;;;;EASI,cAAA,CAAYG,aAAZ,EAAwCC,OAAxC;IAAwC,sBAAA,EAAA;MAAAA,YAAA;;;IARhC,sBAAA,GAA8C,IAA9C;IACA,gBAAA,GAAkC,IAAlC;IACA,UAAA,GAAQ,KAAR;IAOJ,IAAIC,WAAJ;;IAEA,IAAID,OAAO,CAACE,QAAZ,EAAsB;MAClB,OAAOF,OAAO,CAACE,QAAf;MACA,KAAKC,KAAL,GAAa,IAAb;MACAF,WAAW,GAAGF,aAAd;KAHJ,MAIO;MACHE,WAAW,GAAGG,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAAd;MACAN,aAAa,CAACO,WAAd,CAA0BL,WAA1B;;;IAEJM,gBAAU,CACNX,mBAAA,CAACY,UAAD;MAAYV,GAAG,EAAEA,kBAAG,CAAC,IAAD,EAAO,YAAP;OACZE,QADR,CADM,EAGNC,WAHM,CAAV;;;;;EAMG,cAAA,GAAP,UAAcQ,SAAd;IACI,KAAKC,QAAL,GAAgBC,MAAhB,CAAuBF,SAAvB;GADG;;EAGA,cAAA,GAAP;IACI,KAAKC,QAAL,GAAgBE,MAAhB;GADG;;EAGA,oBAAA,GAAP;IACI,OAAO,KAAKF,QAAL,GAAgBG,YAAhB,EAAP;GADG;;EAGA,YAAA,GAAP,UAAYb,OAAZ;IACI,KAAKU,QAAL,GAAgBI,IAAhB,CAAqBd,OAArB;GADG;;;;;;EAMA,eAAA,GAAP;;;IACI,IAAMC,WAAW,GAAG,KAAKA,WAAzB;IAEAM,gBAAU,CACN,IADM,EAENN,WAFM,EAGN,KAAKc,iBAHC,CAAV;;IAKA,IAAI,CAAC,KAAKZ,KAAV,EAAiB;MACb,MAAAF,WAAW,SAAX,IAAAA,WAAW,WAAX,SAAA,GAAAA,WAAW,CAAEF,aAAb,UAAA,iBAAA,SAAA,MAA4BiB,YAAYf,YAAxC;;;IAEJ,KAAKA,WAAL,GAAmB,IAAnB;IACA,KAAKgB,UAAL,GAAkB,IAAlB;GAZG;;EAcC,gBAAA,GAAR;IACI,OAAO,KAAKA,UAAL,CAAgBC,KAAvB;GADI;;EAvDNC,KAAK,eAdVC,yBAAU,CAACjC,UAAD,EAAa,UAACkC,SAAD,EAAYC,QAAZ;IACpBC,MAAM,CAACC,cAAP,CAAsBH,SAAtB,EAAiCC,QAAjC,EAA2C;MACvCG,GAAG;QACC,OAAO,KAAKf,QAAL,GAAgBlB,KAAhB,CAAsB8B,QAAtB,CAAP;OAFmC;MAIvCI,GAAG,YAACC;;;QACA,KAAKV,UAAL,CAAgBW,QAAhB,WACIC,GAACP,SAAD,GAAYK,SADhB;OALmC;MASvCG,UAAU,EAAE,IAT2B;MAUvCC,YAAY,EAAE;KAVlB;GADO,IAcLZ,MAAA;EA0DN,YAAA;AA1DA,GAAA;;;;;;;;;;;ACzBA,KAAK,IAAMa,IAAX,IAAmBC,MAAnB,EAA2B;EACtBd,KAAa,CAACa,IAAD,CAAb,GAAsBC,MAAM,CAACD,IAAD,CAA5B;AACJ;;;;"}